name: CI Pipeline 

on:
  push:
    branches:
      - main
      - developt
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest

    steps:
      # 1. Checkout del c√≥digo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Instalar dependencias del frontend
      - name: Install frontend dependencies
        working-directory: Dana_aplication_4/Dana/Client
        run: npm ci

      # 3. Ejecutar pruebas del frontend
      - name: Run frontend tests
        working-directory: Dana_aplication_4/Dana/Client
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}  # Establece la variable de entorno MONGO_URI
        run: npm run test

      # 4. Instalar dependencias del backend
      - name: Install backend dependencies
        working-directory: Dana_aplication_4/Dana/Server
        run: npm ci

      # 5. Ejecutar pruebas del backend (Ignorar error si algo falla)
      - name: Run backend tests
        working-directory: Dana_aplication_4/Dana/Server
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: npm run test
        continue-on-error: true  # Permitir que el job siga incluso si falla

      # Descargar e instalar SonarScanner
      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip
          Expand-Archive -Path sonar-scanner.zip -DestinationPath $env:USERPROFILE\sonar-scanner
          $env:PATH += ";$env:USERPROFILE\sonar-scanner\sonar-scanner-5.0.1.3006-windows\bin"

      - name: Print working directory
        run: pwd
        
      # Ejecutar SonarQube Scanner
      - name: Run SonarQube Scanner
        working-directory: Dana_aplication_4/Dana/Server
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner